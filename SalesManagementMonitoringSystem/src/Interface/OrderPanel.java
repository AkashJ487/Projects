/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.*;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAGTAP
 */
public class OrderPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrderPanel
     */
    private Business business;
    private SalesPerson salesPerson;
    private JPanel cardSequenceJPanel;
    private Customer customer;
    private Order order;
    DefaultTableModel dtm1;
    public OrderPanel(Business business,JPanel cardSequenceJPanel,SalesPerson salesPerson,Customer customer) {
        initComponents();
        this.business=business;
        this.cardSequenceJPanel=cardSequenceJPanel;
        this.salesPerson=salesPerson;
        this.customer=customer;
        order=business.getOrdersDirectory().addOrder();
        order.setStatus('N');
        order.setCustomer(customer);
        order.setSalesPerson(salesPerson);
        order.setMarketOffer(customer.getMarket().getMarketOffer());
        dtm1 = (DefaultTableModel) cartTable.getModel();
        dtm1.setRowCount(0);
        reload();
    }
    private void reload()
    {
        totPriceTextField.setText("0");
        marketTextField.setText(customer.getMarket().getType());
        orgTextField.setText(customer.getOrganization());
        nameTextField.setText(customer.getName());
        custId.setText(String.valueOf(customer.getId()));
        addressTextField.setText(customer.getAddress());
        emailTextField.setText(customer.getEmail());
        DefaultTableModel dtm = (DefaultTableModel) productTable.getModel();
        dtm.setRowCount(0);
        MarketOffer marketOffer = customer.getMarket().getMarketOffer();
        for(ProductCatlog pc : business.getMasterProductCatlog().getListOfProductCatlogs())
        {
            for(Product p : pc.getListOfProducts())
            {
                Object row[]= new Object[6];
                row[0]=p;
                row[1]=p.getProductId();
                row[2]=p.getProductCatlog().getSupplier().getName();
                row[3]=p.getBasePrice()*marketOffer.getFloorPercentage();
                row[4]=p.getBasePrice()*marketOffer.getTargetPercentage();
                row[5]=p.getBasePrice()*marketOffer.getCeilingPercentage();
                dtm.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        custId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        marketTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        orgTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        srchButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        srchTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        quatityTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        negotiatedPriceTextField = new javax.swing.JTextField();
        addtoCartButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        totPriceTextField = new javax.swing.JTextField();
        confOrderButton = new javax.swing.JButton();
        cancelOrderButton = new javax.swing.JButton();
        rmvFromCartButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Order");

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jLabel2.setText("Customer Details:");

        jLabel3.setText("Name");

        nameTextField.setEnabled(false);
        nameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("Id");

        custId.setEnabled(false);

        jLabel5.setText("email");

        emailTextField.setEnabled(false);

        jLabel6.setText("Address");

        addressTextField.setEnabled(false);

        jLabel7.setText("Market");

        marketTextField.setEnabled(false);

        jLabel8.setText("Organization");

        orgTextField.setEnabled(false);

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Id", "Supplier", "Floor Price", "Target Price", "Ceiling Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(productTable);

        srchButton.setText("Search");
        srchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srchButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Product Name");

        jLabel10.setText("Quantity");

        jLabel11.setText("Negotiated Price");

        addtoCartButton.setText("Add to Cart");
        addtoCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtoCartButtonActionPerformed(evt);
            }
        });

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Id", "Quantity", "Actual Price", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(cartTable);

        jLabel12.setText("Total Price");

        totPriceTextField.setEnabled(false);

        confOrderButton.setText("Confirm Order");
        confOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confOrderButtonActionPerformed(evt);
            }
        });

        cancelOrderButton.setText("Cancel Order");
        cancelOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelOrderButtonActionPerformed(evt);
            }
        });

        rmvFromCartButton.setText("Remove from Cart");
        rmvFromCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvFromCartButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(27, 27, 27)
                        .addComponent(quatityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(negotiatedPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel7)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(marketTextField))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel5)
                                                    .addGap(21, 21, 21)
                                                    .addComponent(emailTextField))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                    .addComponent(jLabel3)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel6)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel9)
                                        .addGap(37, 37, 37)
                                        .addComponent(srchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(custId)
                                    .addComponent(addressTextField)
                                    .addComponent(orgTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(40, 40, 40))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(totPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cancelOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(121, 121, 121)
                        .addComponent(jLabel1))
                    .addComponent(rmvFromCartButton)
                    .addComponent(addtoCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(srchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(marketTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(orgTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(custId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(srchButton)
                    .addComponent(jLabel9)
                    .addComponent(srchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(quatityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(negotiatedPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addtoCartButton)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rmvFromCartButton)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(totPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(confOrderButton)
                    .addComponent(cancelOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextFieldActionPerformed

    private void srchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srchButtonActionPerformed
        // TODO add your handling code here:
        if(srchTextField.getText().isEmpty())
            JOptionPane.showMessageDialog(null, "Please enter product name", "Error", 0);
        else
        {
            DefaultTableModel dtm = (DefaultTableModel) productTable.getModel();
            dtm.setRowCount(0);
            MarketOffer marketOffer = customer.getMarket().getMarketOffer();
            for(ProductCatlog pc : business.getMasterProductCatlog().getListOfProductCatlogs())
            {
                for(Product p : pc.getListOfProducts())
                {
                    if(p.getName().equalsIgnoreCase(srchTextField.getText()))
                    {
                        Object row[]= new Object[6];
                        row[0]=p;
                        row[1]=p.getProductId();
                        row[2]=p.getProductCatlog().getSupplier().getName();
                        row[3]=p.getBasePrice()*marketOffer.getFloorPercentage();
                        row[4]=p.getBasePrice()*marketOffer.getTargetPercentage();
                        row[5]=p.getBasePrice()*marketOffer.getCeilingPercentage();
                        dtm.addRow(row);
                    }
                }
            }
        }
    }//GEN-LAST:event_srchButtonActionPerformed

    private void addtoCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtoCartButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = productTable.getSelectedRow();
        if (selectedRow < 0 )
            JOptionPane.showMessageDialog(null, "Please select a row from product table");
        else
        {
            order.setStatus('Y');
            OrderItems orderItems = order.addOrderItems();
            orderItems.setOrder(order);
            Product p =(Product) productTable.getValueAt(selectedRow, 0);
            orderItems.setProduct(p);
            p.addOrderItem(orderItems);
            try
            {
                if(quatityTextField.getText().isEmpty())
                    orderItems.setQuantity(1);
                else
                    orderItems.setQuantity(Integer.parseInt(quatityTextField.getText()));
                orderItems.setTargetPrice(order.getMarketOffer().getTargetPercentage()*p.getBasePrice());
                if(negotiatedPriceTextField.getText().isEmpty())
                    orderItems.setActualPrice(order.getMarketOffer().getCeilingPercentage()*p.getBasePrice());
                else
                {
                    if (Double.parseDouble(negotiatedPriceTextField.getText()) < (order.getMarketOffer().getFloorPercentage()*p.getBasePrice()))
                    {
                        JOptionPane.showMessageDialog(null, "Negotiated Price cannot be less than floor price", "Error", 0);
                        return;
                    }
                    else
                        orderItems.setActualPrice(Double.parseDouble(negotiatedPriceTextField.getText()));
                }
                Object row[]=new Object[5];
                row[0]=orderItems;
                row[1]=orderItems.getProduct().getProductId();
                row[2]=orderItems.getQuantity();
                row[3]=orderItems.getActualPrice();
                row[4]=orderItems.getTotalAuctualPrice();
                dtm1.addRow(row);
                totPriceTextField.setText(String.valueOf(orderItems.getTotalAuctualPrice()+Double.parseDouble(totPriceTextField.getText())));
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Please enter numberic data in quantity and negotiated price field", "Error", 0);
                e.printStackTrace();
            }
            quatityTextField.setText("");
            negotiatedPriceTextField.setText("");
        }
    }//GEN-LAST:event_addtoCartButtonActionPerformed

    private void rmvFromCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvFromCartButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow= cartTable.getSelectedRow();
        if (selectedRow < 0 )
            JOptionPane.showMessageDialog(null, "Please select a row from cart table ");
        else
        {
            OrderItems oi = (OrderItems) cartTable.getValueAt(selectedRow, 0);
            Product p = oi.getProduct();
            p.getListOfOrderItems().remove(oi);
            order.getListOfOrderItems().remove(oi);
            
            dtm1.setRowCount(0);
            totPriceTextField.setText(String.valueOf(Double.parseDouble(totPriceTextField.getText())-oi.getTotalAuctualPrice()));
            if (order.getListOfOrderItems().isEmpty())
            {
                order.setStatus('N');
                totPriceTextField.setText("0");
                //business.getOrdersDirectory().getListOfOrders().remove(order);
            }
            else
            {
                for(OrderItems orderItems: order.getListOfOrderItems())
                {
                    Object row[]=new Object[5];
                    row[0]=orderItems;
                    row[1]=orderItems.getProduct().getProductId();
                    row[2]=orderItems.getQuantity();
                    row[3]=orderItems.getActualPrice();
                    row[4]=orderItems.getTotalAuctualPrice();
                    dtm1.addRow(row);
                }
            }
            
            
        }
    }//GEN-LAST:event_rmvFromCartButtonActionPerformed

    private void confOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confOrderButtonActionPerformed
        // TODO add your handling code here:
        if (order.getStatus()=='Y')
        {
            salesPerson.getListOfOrders().add(order);
            customer.getListofOrders().add(order);
            JOptionPane.showMessageDialog(null, "order Placed successfully");
            dtm1.setRowCount(0);
        }
        cancelOrderButton.setEnabled(false);
        addtoCartButton.setEnabled(false);
    }//GEN-LAST:event_confOrderButtonActionPerformed

    private void cancelOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelOrderButtonActionPerformed
        // TODO add your handling code here:
        order.setStatus('N');
        confOrderButton.setEnabled(false);
        addtoCartButton.setEnabled(false);
    }//GEN-LAST:event_cancelOrderButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        if (order.getStatus()=='N')
            business.getOrdersDirectory().getListOfOrders().remove(order);
        cardSequenceJPanel.remove(this);
        CardLayout cardLayout = (CardLayout) cardSequenceJPanel.getLayout();
        cardLayout.previous(cardSequenceJPanel);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressTextField;
    private javax.swing.JButton addtoCartButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelOrderButton;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton confOrderButton;
    private javax.swing.JTextField custId;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField marketTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JTextField negotiatedPriceTextField;
    private javax.swing.JTextField orgTextField;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField quatityTextField;
    private javax.swing.JButton rmvFromCartButton;
    private javax.swing.JButton srchButton;
    private javax.swing.JTextField srchTextField;
    private javax.swing.JTextField totPriceTextField;
    // End of variables declaration//GEN-END:variables
}
