/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ManageAirliners;
import Business.*;
import java.awt.CardLayout;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAGTAP
 */
public class AirlinerForFlightPanel extends javax.swing.JPanel {

    /**
     * Creates new form AirlinerForFlight
     */
    private TravelAgency travelAgency;
    private JPanel cardSequenceJPanel;
    public AirlinerForFlightPanel(TravelAgency travelAgency, JPanel cardSequenceJPanel) {
        initComponents();
        this.travelAgency= travelAgency;
        this.cardSequenceJPanel=cardSequenceJPanel;
        reload();
    }
    public void reload()
    {
        DefaultTableModel dtm = (DefaultTableModel)airlinersTable1.getModel();
        dtm.setRowCount(0);
        for (Map.Entry<String,Airliners> it : travelAgency.getListOfAirliner().entrySet())
        {
            Object row[] = new Object[1];
            row[0] = it.getValue();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        airlinersTable = new javax.swing.JTable();
        viewDetailsButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        airlinersTable1 = new javax.swing.JTable();
        viewAirplanesButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        airplanesTable = new javax.swing.JTable();
        scheduleFlightButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        airlinersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(airlinersTable);

        viewDetailsButton.setText("View Details");

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("    Select Airliner & Airplane for Flight ");

        airlinersTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(airlinersTable1);

        viewAirplanesButton.setText("View Airplanes");
        viewAirplanesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAirplanesButtonActionPerformed(evt);
            }
        });

        airplanesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airplane Id", "Model Num", "Company", "Manuf. Year", "Total Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.Short.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(airplanesTable);

        scheduleFlightButton.setText("Schedule Flight");
        scheduleFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleFlightButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Airliner Table:-");

        jLabel3.setText("Airplane Table:-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(viewAirplanesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scheduleFlightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(backButton))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewAirplanesButton)
                        .addGap(42, 42, 42)
                        .addComponent(scheduleFlightButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void scheduleFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleFlightButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = airplanesTable.getSelectedRow();
        if (selectedRow < 0 )
            JOptionPane.showMessageDialog(null, "Please select a row from Airplane Table");
        else
        {
            Airplane airplane= (Airplane) airplanesTable.getValueAt(selectedRow, 0);
            FlightPanel flightPanel = new FlightPanel(travelAgency,airplane,cardSequenceJPanel);
            cardSequenceJPanel.add("Flight",flightPanel);
            CardLayout cardLayout = (CardLayout) cardSequenceJPanel.getLayout();
            cardLayout.next(cardSequenceJPanel);
        }
    }//GEN-LAST:event_scheduleFlightButtonActionPerformed

    private void viewAirplanesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAirplanesButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = airlinersTable1.getSelectedRow();
        if (selectedRow < 0 )
            JOptionPane.showMessageDialog(null, "Please select a row from Airliner Table");
        else
        {
            Airliners airliners = (Airliners) airlinersTable1.getValueAt(selectedRow, 0);
            Fleet fleet = airliners.getFleet();
            DefaultTableModel dtm = (DefaultTableModel) airplanesTable.getModel();
            dtm.setRowCount(0);
            for (Airplane airplane: fleet.getListOfAirplanes())
            {
                Object row[] = new Object[5];
                row[0] = airplane;
                row[1] = airplane.getModelNumber();
                row[2]=airplane.getManufacturingCompany();
                row[3]=airplane.getManufacturingYear();
                row[4]=airplane.getTotalSeats();
                dtm.addRow(row);
            }
            //airlinersTable1.setEnabled(false);
        }
    }//GEN-LAST:event_viewAirplanesButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        cardSequenceJPanel.remove(this);
        CardLayout cardLayout = (CardLayout) cardSequenceJPanel.getLayout();
        cardLayout.previous(cardSequenceJPanel);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable airlinersTable;
    private javax.swing.JTable airlinersTable1;
    private javax.swing.JTable airplanesTable;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton scheduleFlightButton;
    private javax.swing.JButton viewAirplanesButton;
    private javax.swing.JButton viewDetailsButton;
    // End of variables declaration//GEN-END:variables
}
